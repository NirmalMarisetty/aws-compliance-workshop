AWSTemplateFormatVersion: 2010-09-09
Description: Pipeline for bootstrapping AWS Config
Parameters:
  SourceRepo:
    Type: String
    Description: Provide specific repository
    Default: paulduvall/aws-config
  GitHubToken:
    NoEcho: true
    Type: String
    Default: ""
    Description: Secret. It might look something like 7f123a1654643522561f7b3ebd55a1531a4287af OAuthToken with access to Repo. Go to https://github.com/settings/tokens
  SourceBranch:
    Type: String
    Description: Source Branch
    Default: "master"
  BuildType:
    Type: String
    Default: "LINUX_CONTAINER"
    Description: The build container type to use for building the app
  BuildComputeType:
    Type: String 
    Default: "BUILD_GENERAL1_SMALL"
    Description: The build compute type to use for building the app
  BuildImage:
    Type: String
    Default: "aws/codebuild/ruby:2.3.1"
    Description: The build image to use for building the app
Resources:
  CodePipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub '${AWS::StackName}-codepipeline-${AWS::Region}'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: "/"
      Policies:
        - PolicyName: codepipeline-service
          PolicyDocument:
            Version: 2012-10-17
            Statement:
            - Action:
              - 'codebuild:StartBuild'
              - 'codebuild:StopBuild'
              - 'codebuild:BatchGetProjects'
              - 'codebuild:BatchGetBuilds'
              Effect: Allow
              Resource:
              - !Sub >-
                  arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${AWS::StackName}-pipeline-*
            - Action:
              - 's3:GetObject'
              - 's3:GetObjectVersion'
              - 's3:PutObject'
              Resource:
              - !Sub 'arn:aws:s3:::${Bucket}/*'
              Effect: Allow
            - Action:
              - 's3:GetBucketVersioning'
              Resource:
              - !Sub 'arn:aws:s3:::${Bucket}'
              Effect: Allow
            - Action:
              - iam:PassRole
              Resource:
              - !GetAtt CodeBuildRole.Arn
              Effect: Allow

  CodePipelineAccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: codepipeline-access
      Roles:
      - !Ref CodeBuildRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action:
          - codepipeline:GetJobDetails
          - codepipeline:PollForJobs
          - codepipeline:AcknowledgeJob
          - codepipeline:PutJobFailureResult
          - codepipeline:PutJobSuccessResult
          Effect: Allow
          Resource: '*'
        - Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Effect: Allow
          Resource: '*'
        - Action:
          - s3:GetObject
          - s3:GetObjectVersion
          - s3:PutObject
          Resource:
          - Fn::Sub: arn:aws:s3:::${Bucket}/*
          Effect: Allow
        - Action:
          - s3:GetBucketVersioning
          Resource:
          - Fn::Sub: arn:aws:s3:::${Bucket}
          Effect: Allow
        - Action:
          - cloudformation:CreateChangeSet
          - cloudformation:DescribeChangeSet
          - cloudformation:DeleteChangeSet
          - cloudformation:ExecuteChangeSet
          - cloudformation:ListChangeSets
          Effect: Allow
          Resource: '*'
        - Action:
          - config:PutConfigRule
          - config:PutDeliveryChannel
          - config:DescribeConfigurationRecorders
          - config:PutConfigurationRecorder
          - config:DeleteConfigRule
          - config:DeleteConfigurationRecorder
          - config:DeleteDeliveryChannel
          Effect: Allow
          Resource: '*'
        - Action:
          - sqs:*
          Effect: Allow
          Resource: '*'
        - Action:
          - iam:CreateRole
          - iam:GetRole
          - iam:AttachRolePolicy
          - iam:DeleteRolePolicy
          - iam:PutRolePolicy
          - iam:DetachRolePolicy
          - iam:DeleteRole
          - iam:PassRole
          Effect: Allow
          Resource:
          - Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/AWSConfigRecorder-AWSConfigRole
        - Action:
          - lambda:CreateFunction
          - lambda:GetFunction
          - lambda:DeleteFunction
          - lambda:ListFunctions
          - lambda:TagResources
          - lambda:GetFunctionConfiguration
          - lambda:AddPermission
          Effect: Allow
          Resource:
          - Fn::Sub: arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:CustomConfigRule-SG-Ports-CheckAllPortsOpenSG
          - Fn::Sub: arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:CustomConfigRule-SG-PublicWe-CheckPublicForWebOnly
  Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub '${AWS::StackName}-${AWS::Region}-${AWS::AccountId}'
  BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref Bucket
      PolicyDocument:
        Version: 2012-10-17
        Id: SSEAndSSLPolicy
        Statement:
          - Sid: DenyUnEncryptedObjectUploads
            Effect: Deny
            Principal: '*'
            Action: 's3:PutObject'
            Resource: !Sub 'arn:aws:s3:::${Bucket}/*'
            Condition:
              StringNotEquals:
                's3:x-amz-server-side-encryption': 'aws:kms'
          - Sid: DenyInsecureConnections
            Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource: !Sub 'arn:aws:s3:::${Bucket}/*'
            Condition:
              Bool:
                'aws:SecureTransport"': false

  CodeBuildArtifact:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-pipeline-artifact
      EncryptionKey: !GetAtt CodePipelineKey.Arn
      Description: Build artifact from source
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Cache:
        Type: S3
        Location: !Sub ${Bucket}/${AWS::StackName}/_cache/artifact
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: !Ref BuildType
        ComputeType: !Ref BuildComputeType
        Image: !Sub ${BuildImage}
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 30

  CodeBuildConfigRules:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-pipeline-configrules
      EncryptionKey: !GetAtt CodePipelineKey.Arn
      Description: Package and deploy Config rules
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Cache:
        Type: S3
        Location: !Sub ${Bucket}/${AWS::StackName}/_cache/artifact
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: !Ref BuildType
        ComputeType: !Ref BuildComputeType
        Image: !Sub ${BuildImage}
        EnvironmentVariables:
          - Name: S3_BUCKET
            Value: !Sub ${Bucket}/${AWS::StackName}/config_rules
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yml
      TimeoutInMinutes: 30

  CodeBuildCloudTrail:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-pipeline-cloudtrail
      EncryptionKey: !GetAtt CodePipelineKey.Arn
      Description: Package and Deploy CloudTrail
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Cache:
        Type: S3
        Location: !Sub ${Bucket}/${AWS::StackName}/_cache/artifact
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: !Ref BuildType
        ComputeType: !Ref BuildComputeType
        Image: !Sub ${BuildImage}
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 30

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-pipeline-${AWS::Region}
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codebuild.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: cloud-describe
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - cloudformation:CreateStack
            - cloudformation:UpdateStack
            - cloudformation:DescribeStackEvents
            - cloudformation:GetTemplateSummary
            Resource:
            - '*'
            Effect: Allow
          - Action:
            - cloudformation:DescribeStacks
            Resource: '*'
            Effect: Allow

  CodePipelineKey:
    Type: AWS::KMS::Key
    Properties:
      Description: !Sub Pipeline key for ${AWS::StackName}-pipeline
      Enabled: true
      EnableKeyRotation: false
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Effect: "Allow"
            Principal:
              AWS:
              - !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              - 'kms:*'
            Resource: '*'
          - Effect: "Allow"
            Principal:
              AWS: '*'
            Action:
              - kms:GenerateDataKey
              - kms:GenerateDataKeyWithoutPlaintext
              - kms:Encrypt
              - kms:ReEncryptFrom
              - kms:ReEncryptTo
              - kms:Decrypt
            Resource: '*'
            Condition:
              StringEquals:
                'kms:ViaService': !Sub "s3.${AWS::Region}.amazonaws.com"
                'kms:CallerAccount': !Sub ${AWS::AccountId}
          - Effect: "Allow"
            Principal:
              AWS:
              - !GetAtt CodePipelineRole.Arn
            Action:
              - kms:GenerateDataKey
              - kms:GenerateDataKeyWithoutPlaintext
              - kms:Encrypt
              - kms:ReEncryptFrom
              - kms:ReEncryptTo
              - kms:Decrypt
            Resource: '*'
            Condition:
              StringEquals:
                'kms:ViaService': !Sub "s3.${AWS::Region}.amazonaws.com"
                'kms:CallerAccount': !Sub ${AWS::AccountId}
          - Effect: "Deny"
            Principal: '*'
            Action:
              - 'kms:CreateGrant'
              - 'kms:ListGrants'
              - 'kms:RevokeGrant'
            Resource: '*'
            Condition:
              Bool:
                kms:GrantIsForAWSResource: false
  CodePipelineKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${AWS::StackName}-pipeline
      TargetKeyId: !Ref CodePipelineKey
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineRole.Arn
      Name: !Sub ${AWS::StackName}-AWS-Config-Pipeline
      Stages:
      - Name: Source
        Actions:
        - Name: Source
          InputArtifacts: []
          OutputArtifacts:
          - Name: SourceOutput
          ActionTypeId:
            Category: Source
            Owner: ThirdParty
            Version: '1'
            Provider: GitHub
          Configuration:
            Owner: {"Fn::Select": ["0", {"Fn::Split":["/", {"Ref": "SourceRepo"}]}]}
            Repo: {"Fn::Select": ["1", {"Fn::Split":["/", {"Ref": "SourceRepo"}]}]}
            Branch: !Ref SourceBranch
            OAuthToken: !Ref GitHubToken
          RunOrder: 10
      - Name: Build
        Actions:
        - Name: Artifact
          ActionTypeId:
            Category: Build
            Owner: AWS
            Version: '1'
            Provider: CodeBuild
          InputArtifacts:
          - Name: SourceOutput
          OutputArtifacts:
          - Name: ArtifactOutput
          Configuration:
            ProjectName: !Ref CodeBuildArtifact
          RunOrder: 10
      - Name: Deploy
        Actions:
        - Name: DeployConfigRules
          ActionTypeId:
            Category: Build
            Owner: AWS
            Version: '1'
            Provider: CodeBuild
          InputArtifacts:
          - Name: ArtifactOutput
          OutputArtifacts:
          - Name: DeployConfigRulesOutput
          Configuration:
            ProjectName: !Ref CodeBuildConfigRules
          RunOrder: 10
        - Name: DeployCloudTrail
          ActionTypeId:
            Category: Build
            Owner: AWS
            Version: '1'
            Provider: CodeBuild
          InputArtifacts:
          - Name: ArtifactOutput
          OutputArtifacts:
          - Name: DeployCloudTrailOutput
          Configuration:
            ProjectName: !Ref CodeBuildCloudTrail
          RunOrder: 10
      ArtifactStore:
        Type: S3
        EncryptionKey:
          Id: !GetAtt CodePipelineKey.Arn
          Type: KMS
        Location: !Ref Bucket
Outputs:
  CodePipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
    Description: CodePipeline URL
  PipelineName:
    Value: !Sub ${Pipeline}
    Description: Pipeline Name